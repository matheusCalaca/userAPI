definitions:
  model.Endereco:
    properties:
      CEP:
        type: string
      UF:
        type: string
      bairro:
        type: string
      cidade:
        type: string
      complemento:
        type: string
      enderecoPessoa:
        type: integer
      logradouro:
        type: string
      numero:
        type: string
      tipo:
        type: string
    type: object
  model.Pessoa:
    properties:
      CPF:
        type: string
      RG:
        type: string
      dataNascimento:
        type: string
      email:
        type: string
      enderecos:
        items:
          $ref: '#/definitions/model.Endereco'
        type: array
      nome:
        type: string
      sobrenome:
        type: string
      telefones:
        items:
          $ref: '#/definitions/model.Telefone'
        type: array
    type: object
  model.Telefone:
    properties:
      ddd:
        type: integer
      numero:
        type: string
      telefonePessoa:
        type: integer
      tipo:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Pessoa'
            type: array
    post:
      consumes:
      - application/json
      parameters:
      - description: Pessoa
        in: body
        name: pessoa
        required: true
        schema:
          $ref: '#/definitions/model.Pessoa'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Pessoa'
  /users/{cpf}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Cpf para deletar uma Pessoa
        in: path
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
    get:
      consumes:
      - application/json
      parameters:
      - description: CPF para fazer a busca da pessoa
        in: path
        name: cpf
        required: true
        type: string
swagger: "2.0"

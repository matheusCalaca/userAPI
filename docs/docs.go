// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-04-25 13:01:07.2505938 -0300 -03 m=+6.759174401

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/users": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Pessoa"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Pessoa",
                        "name": "pessoa",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Pessoa"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Pessoa"
                        }
                    }
                }
            }
        },
        "/users/{cpf}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF para fazer a busca da pessoa",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cpf para deletar uma Pessoa",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Endereco": {
            "type": "object",
            "properties": {
                "CEP": {
                    "type": "string"
                },
                "UF": {
                    "type": "string"
                },
                "bairro": {
                    "type": "string"
                },
                "cidade": {
                    "type": "string"
                },
                "complemento": {
                    "type": "string"
                },
                "enderecoPessoa": {
                    "type": "integer"
                },
                "logradouro": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                }
            }
        },
        "model.Pessoa": {
            "type": "object",
            "properties": {
                "CPF": {
                    "type": "string"
                },
                "RG": {
                    "type": "string"
                },
                "dataNascimento": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enderecos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Endereco"
                    }
                },
                "nome": {
                    "type": "string"
                },
                "sobrenome": {
                    "type": "string"
                },
                "telefones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Telefone"
                    }
                }
            }
        },
        "model.Telefone": {
            "type": "object",
            "properties": {
                "ddd": {
                    "type": "integer"
                },
                "numero": {
                    "type": "string"
                },
                "telefonePessoa": {
                    "type": "integer"
                },
                "tipo": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
